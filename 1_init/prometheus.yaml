
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus
  namespace: monitoring
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--web.external-url=${DDNS}/prometheus"
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: data
          mountPath: /prometheus
        - name: config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: prometheus
      - name: config
        configMap:
          name: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  ports:
  - port: 9090
  selector:
    app: prometheus
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: prometheus-forward-auth-mw
  namespace: monitoring
spec:
  forwardAuth:
    address: http://forward-auth.kube-system.svc.cluster.local:4181
    trustForwardHeader: true
    authResponseHeaders:
    - X-Forwarded-User
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus
  namespace: monitoring
spec:
  entryPoints:
  - websecure
  routes:
  - match: Host(`${DDNS}`) && PathPrefix(`/prometheus`)
    kind: Rule
    middlewares:
    - name: prometheus-forward-auth-mw
    services:
    - name: prometheus
      port: 9090
  tls:
    certResolver: ${RESOLVER_NAME}
